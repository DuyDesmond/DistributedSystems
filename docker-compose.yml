version: '3.8'

services: 
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: filesync
      POSTGRES_USER: filesync
      POSTGRES_PASSWORD: filesync_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U filesync"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: filesync
      RABBITMQ_DEFAULT_PASS: filesync_password
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 5

  server:
    build:
      context: .
      dockerfile: server/Dockerfile
    ports:
      - "8000:8000"
    environment:
      DATABASE_URL: postgresql://filesync:filesync_password@postgres:5432/filesync
      REDIS_URL: redis://redis:6379
      RABBITMQ_URL: amqp://filesync:filesync_password@rabbitmq:5672/
    volumes:
      - ./storage:/app/storage
      - ./server:/app/server
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  rabbitmq_data:
